// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+o",
        "command": "workbench.action.navigateEditorGroups"
    },
    {
        "key": "ctrl+x o",
        "command": "-workbench.action.navigateEditorGroups"
    },
    {
        "key": "ctrl+alt+f",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+c ctrl+h",
        "command": "extension.aceJump"
    },
    {
        "key": "ctrl+x n",
        "command": "workbench.action.showNextWindowTab"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "editor.action.marker.next"
    },
    {
        "key": "alt+g n",
        "command": "-editor.action.marker.next"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "editor.action.marker.next",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+p",
        "command": "editor.action.marker.prev",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+p",
        "command": "editor.action.marker.prev"
    },
    {
        "key": "alt+g p",
        "command": "-editor.action.marker.prev"
    },
    {
        "key": "ctrl+x ctrl+p",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+h",
        "command": "deleteWordLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+h",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c ctrl+alt+g",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+x ctrl+alt+g",
        "command": "editor.action.peekTypeDefinition"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+;",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+;",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+;",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+-",
        "command": "editor.action.webvieweditor.undo",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "cmd+z",
        "command": "-editor.action.webvieweditor.undo",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+shift+-",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+z",
        "command": "-undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+-",
        "command": "editor.action.webvieweditor.redo",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "shift+cmd+z",
        "command": "-editor.action.webvieweditor.redo",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "shift+alt+-",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+z",
        "command": "-redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+o",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "shift+alt+o",
        "command": "-editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "ctrl+x ctrl+l",
        "command": "-editor.action.transformToLowercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+l",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+cmd+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+x ctrl+h",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+cmd+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "tab",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+g",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+c e",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c p",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "ctrl+c p",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+c w",
        "command": "trailing-spaces.deleteTrailingSpaces"
    },
    {
        "key": "ctrl+x m",
        "command": "gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "alt+cmd+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "ctrl+alt+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    }
]
